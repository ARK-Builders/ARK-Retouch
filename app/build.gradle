import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
}

android {
    compileSdk 33

    defaultConfig {
        def login = System.getenv("ACRA_LOGIN") ?: ""
        def password = System.getenv("ACRA_PASS") ?: ""
        def uri = System.getenv("ACRA_URI") ?: ""

        applicationId "dev.arkbuilders.arkretouch2"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"
        setProperty("archivesBaseName", "ark-retouch")

        buildConfigField "String", "ACRA_LOGIN", "\"$login\""
        buildConfigField "String", "ACRA_PASS", "\"$password\""
        buildConfigField "String", "ACRA_URI", "\"$uri\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    signingConfigs {
        testRelease {
            storeFile project.rootProject.file('./keystore.jks')
            storePassword "sw0rdf1sh"
            keyAlias "ark-builders-test"
            keyPassword "rybamech"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_1",
                appLabel: "@string/app_name_debug"
            ]
        }
        release {
            signingConfig signingConfigs.testRelease
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_2",
                appLabel: "@string/app_name"
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.1"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2"

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "com.github.bumptech.glide:glide:4.16.0"
    kapt "com.github.bumptech.glide:compiler:4.16.0"

    implementation 'com.google.dagger:dagger:2.50'
    kapt 'com.google.dagger:dagger-compiler:2.50'

    implementation 'com.godaddy.android.colorpicker:compose-color-picker:0.7.0'

    implementation 'dev.arkbuilders:arkfilepicker:0.1.1'
    implementation "androidx.navigation:navigation-compose:2.5.2"

    implementation "ch.acra:acra-http:5.9.3"
    implementation "ch.acra:acra-dialog:5.9.3"

    implementation 'io.github.hokofly:hoko-blur:1.5.3'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

task installGitHook(type: Copy) {
    def suffix = "linux"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        suffix = "windows"
    }
    from new File(rootProject.rootDir, "scripts/pre-commit-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-commit-$suffix", 'pre-commit')
    fileMode 0775
}

tasks.preBuild.dependsOn installGitHook
tasks.preBuild.dependsOn ktlintCheck
